; This is automatically generated by the Tiger compiler.
; Do NOT modify!

.class public Tree
.super java/lang/Object

.field public left LTree;
.field public right LTree;
.field public key I
.field public has_left Z
.field public has_right Z
.field public my_null LTree;
.method public <init>()V
    aload 0
    invokespecial java/lang/Object/<init>()V
    return
.end method


.method public Init(I)Z
.limit stack 4096
.limit locals 3
    aload 0
    iload 1
    putfield Tree/key I
    aload 0
    ldc 0
    putfield Tree/has_left Z
    aload 0
    ldc 0
    putfield Tree/has_right Z
    ldc 1
    ireturn
.end method
.method public SetRight(LTree;)Z
.limit stack 4096
.limit locals 3
    aload 0
    aload 1
    putfield Tree/right LTree;
    ldc 1
    ireturn
.end method
.method public SetLeft(LTree;)Z
.limit stack 4096
.limit locals 3
    aload 0
    aload 1
    putfield Tree/left LTree;
    ldc 1
    ireturn
.end method
.method public GetRight()LTree;
.limit stack 4096
.limit locals 2
    aload 0
    getfield Tree/right LTree;
    areturn
.end method
.method public GetLeft()LTree;
.limit stack 4096
.limit locals 2
    aload 0
    getfield Tree/left LTree;
    areturn
.end method
.method public GetKey()I
.limit stack 4096
.limit locals 2
    aload 0
    getfield Tree/key I
    ireturn
.end method
.method public SetKey(I)Z
.limit stack 4096
.limit locals 3
    aload 0
    iload 1
    putfield Tree/key I
    ldc 1
    ireturn
.end method
.method public GetHas_Right()Z
.limit stack 4096
.limit locals 2
    aload 0
    getfield Tree/has_right Z
    ireturn
.end method
.method public GetHas_Left()Z
.limit stack 4096
.limit locals 2
    aload 0
    getfield Tree/has_left Z
    ireturn
.end method
.method public SetHas_Left(Z)Z
.limit stack 4096
.limit locals 3
    aload 0
    iload 1
    putfield Tree/has_left Z
    ldc 1
    ireturn
.end method
.method public SetHas_Right(Z)Z
.limit stack 4096
.limit locals 3
    aload 0
    iload 1
    putfield Tree/has_right Z
    ldc 1
    ireturn
.end method
.method public Compare(II)Z
.limit stack 4096
.limit locals 6
    ldc 0
    istore 3
    iload 2
    ldc 1
    iadd
    istore 4
    iload 1
    iload 2
    if_icmplt L_2
L_3:
    ldc 0
    goto L_4
L_2:
    ldc 1
L_4:
    ifeq L_0
    ldc 0
    istore 3
    goto L_1
L_0:
    iload 1
    iload 4
    if_icmplt L_7
L_8:
    ldc 0
    goto L_9
L_7:
    ldc 1
L_9:
    ldc 1
    ixor
    ifeq L_5
    ldc 0
    istore 3
    goto L_6
L_5:
    ldc 1
    istore 3
L_6:
L_1:
    iload 3
    ireturn
.end method
.method public Insert(I)Z
.limit stack 4096
.limit locals 8
    new Tree
    dup
    invokespecial Tree/<init>()V
    astore 2
    aload 2
    iload 1
    invokevirtual Tree/Init(I)Z
    istore 3
    aload 0
    astore 4
    ldc 1
    istore 5
L_11:
    iload 5
    ifeq L_10
    aload 4
    invokevirtual Tree/GetKey()I
    istore 6
    iload 1
    iload 6
    if_icmplt L_14
L_15:
    ldc 0
    goto L_16
L_14:
    ldc 1
L_16:
    ifeq L_12
    aload 4
    invokevirtual Tree/GetHas_Left()Z
    ifeq L_17
    aload 4
    invokevirtual Tree/GetLeft()LTree;
    astore 4
    goto L_18
L_17:
    ldc 0
    istore 5
    aload 4
    ldc 1
    invokevirtual Tree/SetHas_Left(Z)Z
    istore 3
    aload 4
    aload 2
    invokevirtual Tree/SetLeft(LTree;)Z
    istore 3
L_18:
    goto L_13
L_12:
    aload 4
    invokevirtual Tree/GetHas_Right()Z
    ifeq L_19
    aload 4
    invokevirtual Tree/GetRight()LTree;
    astore 4
    goto L_20
L_19:
    ldc 0
    istore 5
    aload 4
    ldc 1
    invokevirtual Tree/SetHas_Right(Z)Z
    istore 3
    aload 4
    aload 2
    invokevirtual Tree/SetRight(LTree;)Z
    istore 3
L_20:
L_13:
    goto L_11
L_10:
    ldc 1
    ireturn
.end method
.method public Delete(I)Z
.limit stack 4096
.limit locals 10
    aload 0
    astore 2
    aload 0
    astore 3
    ldc 1
    istore 4
    ldc 0
    istore 5
    ldc 1
    istore 7
L_22:
    iload 4
    ifeq L_21
    aload 2
    invokevirtual Tree/GetKey()I
    istore 8
    iload 1
    iload 8
    if_icmplt L_25
L_26:
    ldc 0
    goto L_27
L_25:
    ldc 1
L_27:
    ifeq L_23
    aload 2
    invokevirtual Tree/GetHas_Left()Z
    ifeq L_28
    aload 2
    astore 3
    aload 2
    invokevirtual Tree/GetLeft()LTree;
    astore 2
    goto L_29
L_28:
    ldc 0
    istore 4
L_29:
    goto L_24
L_23:
    iload 8
    iload 1
    if_icmplt L_32
L_33:
    ldc 0
    goto L_34
L_32:
    ldc 1
L_34:
    ifeq L_30
    aload 2
    invokevirtual Tree/GetHas_Right()Z
    ifeq L_35
    aload 2
    astore 3
    aload 2
    invokevirtual Tree/GetRight()LTree;
    astore 2
    goto L_36
L_35:
    ldc 0
    istore 4
L_36:
    goto L_31
L_30:
    iload 7
    ifeq L_37
    aload 2
    invokevirtual Tree/GetHas_Right()Z
    ldc 1
    ixor
    aload 2
    invokevirtual Tree/GetHas_Left()Z
    ldc 1
    ixor
    iand
    ifeq L_39
    ldc 1
    istore 6
    goto L_40
L_39:
    aload 0
    aload 3
    aload 2
    invokevirtual Tree/Remove(LTree;LTree;)Z
    istore 6
L_40:
    goto L_38
L_37:
    aload 0
    aload 3
    aload 2
    invokevirtual Tree/Remove(LTree;LTree;)Z
    istore 6
L_38:
    ldc 1
    istore 5
    ldc 0
    istore 4
L_31:
L_24:
    ldc 0
    istore 7
    goto L_22
L_21:
    iload 5
    ireturn
.end method
.method public Remove(LTree;LTree;)Z
.limit stack 4096
.limit locals 7
    aload 2
    invokevirtual Tree/GetHas_Left()Z
    ifeq L_41
    aload 0
    aload 1
    aload 2
    invokevirtual Tree/RemoveLeft(LTree;LTree;)Z
    istore 3
    goto L_42
L_41:
    aload 2
    invokevirtual Tree/GetHas_Right()Z
    ifeq L_43
    aload 0
    aload 1
    aload 2
    invokevirtual Tree/RemoveRight(LTree;LTree;)Z
    istore 3
    goto L_44
L_43:
    aload 2
    invokevirtual Tree/GetKey()I
    istore 4
    aload 1
    invokevirtual Tree/GetLeft()LTree;
    invokevirtual Tree/GetKey()I
    istore 5
    aload 0
    iload 4
    iload 5
    invokevirtual Tree/Compare(II)Z
    ifeq L_45
    aload 1
    aload 0
    getfield Tree/my_null LTree;
    invokevirtual Tree/SetLeft(LTree;)Z
    istore 3
    aload 1
    ldc 0
    invokevirtual Tree/SetHas_Left(Z)Z
    istore 3
    goto L_46
L_45:
    aload 1
    aload 0
    getfield Tree/my_null LTree;
    invokevirtual Tree/SetRight(LTree;)Z
    istore 3
    aload 1
    ldc 0
    invokevirtual Tree/SetHas_Right(Z)Z
    istore 3
L_46:
L_44:
L_42:
    ldc 1
    ireturn
.end method
.method public RemoveRight(LTree;LTree;)Z
.limit stack 4096
.limit locals 5
L_48:
    aload 2
    invokevirtual Tree/GetHas_Right()Z
    ifeq L_47
    aload 2
    aload 2
    invokevirtual Tree/GetRight()LTree;
    invokevirtual Tree/GetKey()I
    invokevirtual Tree/SetKey(I)Z
    istore 3
    aload 2
    astore 1
    aload 2
    invokevirtual Tree/GetRight()LTree;
    astore 2
    goto L_48
L_47:
    aload 1
    aload 0
    getfield Tree/my_null LTree;
    invokevirtual Tree/SetRight(LTree;)Z
    istore 3
    aload 1
    ldc 0
    invokevirtual Tree/SetHas_Right(Z)Z
    istore 3
    ldc 1
    ireturn
.end method
.method public RemoveLeft(LTree;LTree;)Z
.limit stack 4096
.limit locals 5
L_50:
    aload 2
    invokevirtual Tree/GetHas_Left()Z
    ifeq L_49
    aload 2
    aload 2
    invokevirtual Tree/GetLeft()LTree;
    invokevirtual Tree/GetKey()I
    invokevirtual Tree/SetKey(I)Z
    istore 3
    aload 2
    astore 1
    aload 2
    invokevirtual Tree/GetLeft()LTree;
    astore 2
    goto L_50
L_49:
    aload 1
    aload 0
    getfield Tree/my_null LTree;
    invokevirtual Tree/SetLeft(LTree;)Z
    istore 3
    aload 1
    ldc 0
    invokevirtual Tree/SetHas_Left(Z)Z
    istore 3
    ldc 1
    ireturn
.end method
.method public Search(I)I
.limit stack 4096
.limit locals 7
    aload 0
    astore 2
    ldc 1
    istore 4
    ldc 0
    istore 3
L_52:
    iload 4
    ifeq L_51
    aload 2
    invokevirtual Tree/GetKey()I
    istore 5
    iload 1
    iload 5
    if_icmplt L_55
L_56:
    ldc 0
    goto L_57
L_55:
    ldc 1
L_57:
    ifeq L_53
    aload 2
    invokevirtual Tree/GetHas_Left()Z
    ifeq L_58
    aload 2
    invokevirtual Tree/GetLeft()LTree;
    astore 2
    goto L_59
L_58:
    ldc 0
    istore 4
L_59:
    goto L_54
L_53:
    iload 5
    iload 1
    if_icmplt L_62
L_63:
    ldc 0
    goto L_64
L_62:
    ldc 1
L_64:
    ifeq L_60
    aload 2
    invokevirtual Tree/GetHas_Right()Z
    ifeq L_65
    aload 2
    invokevirtual Tree/GetRight()LTree;
    astore 2
    goto L_66
L_65:
    ldc 0
    istore 4
L_66:
    goto L_61
L_60:
    ldc 1
    istore 3
    ldc 0
    istore 4
L_61:
L_54:
    goto L_52
L_51:
    iload 3
    ireturn
.end method
.method public Print()Z
.limit stack 4096
.limit locals 4
    aload 0
    astore 2
    aload 0
    aload 2
    invokevirtual Tree/RecPrint(LTree;)Z
    istore 1
    ldc 1
    ireturn
.end method
.method public RecPrint(LTree;)Z
.limit stack 4096
.limit locals 4
    aload 1
    invokevirtual Tree/GetHas_Left()Z
    ifeq L_67
    aload 0
    aload 1
    invokevirtual Tree/GetLeft()LTree;
    invokevirtual Tree/RecPrint(LTree;)Z
    istore 2
    goto L_68
L_67:
    ldc 1
    istore 2
L_68:
    aload 1
    invokevirtual Tree/GetKey()I
    getstatic java/lang/System/out Ljava/io/PrintStream;
    swap
    invokevirtual java/io/PrintStream/println(I)V
    aload 1
    invokevirtual Tree/GetHas_Right()Z
    ifeq L_69
    aload 0
    aload 1
    invokevirtual Tree/GetRight()LTree;
    invokevirtual Tree/RecPrint(LTree;)Z
    istore 2
    goto L_70
L_69:
    ldc 1
    istore 2
L_70:
    ldc 1
    ireturn
.end method
.method public accept(LVisitor;)I
.limit stack 4096
.limit locals 4
    ldc 333
    getstatic java/lang/System/out Ljava/io/PrintStream;
    swap
    invokevirtual java/io/PrintStream/println(I)V
    aload 1
    aload 0
    invokevirtual Visitor/visit(LTree;)I
    istore 2
    ldc 0
    ireturn
.end method
